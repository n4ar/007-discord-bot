const { MessageEmbed, Permissions } = require('discord.js')
const config = require('../config')
const mu = require('./music')
const wait = require('util').promisify(setTimeout);
const { all } = require('./button-music')
module.exports = {
    async run(client, interaction, db) {
        try {

            const { channel } = interaction.member.voice
            if (!channel) return this.msgtimeout(interaction, '‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö!', "RED", 5, true)
            if (!config.owners.includes(interaction.user.id)) {
                if (!interaction.guild.me.permissions.has(Permissions.FLAGS.CONNECT)) return this.msgtimeout(interaction, '‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á‡πÄ‡πÄ‡∏™‡∏µ‡∏¢‡∏á!', "RED", 5, true)
                if (!interaction.guild.me.permissions.has(Permissions.FLAGS.SPEAK)) return this.msgtimeout(interaction, '‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡∏¢!', "RED", 5, true)
            }
            const player = client.manager.players.get(interaction.guild.id)
            // console.log(interaction.customId)
            if ([
                'MUSIC_PREVIOU', 'MUSIC_PLAY_PAUSE',
                'MUSIC_NEXT','MUSIC_LOOP', 
                'MUSIC_SHUFFLE', 'MUSIC_PLUS_VOLUME',
                'MUSIC_LOW_VOLUME', 'MUSIC_OPEN_AND_CLOSE_LOW_VOLUME'
                ].includes(interaction.customId)) {
                if (!player)  {
                    mu.embed_playering(client, interaction.guild.id, interaction.member.user.id)
                    this.msgtimeout(interaction, '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢!', "RED", 3, true)
                    return
                }
                if (player.channel !== channel.id) return this.msgtimeout(interaction, '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó!', "RED", 3, true)
            }
            if (interaction.customId === "MUSIC_PREVIOU") {
                const pre = await player.queue.previou()
                if (pre == 'CAN_NOT_PREVIOU_MUSIC') return this.msgtimeout(interaction, '‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ!', "RED", 3, true)
                // this.msgtimeout(interaction, `‡∏¢‡πâ‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏á \`${pre.title}\` ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`, "GREEN", 3)

                player.queue.messageUpdate = `${interaction.member.user.username} ‡∏¢‡πâ‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏á`
                interaction.deferUpdate()
                mu.embed_playering(client, interaction.guild.id, interaction.member.user.id)
                return
            } else if (interaction.customId === "MUSIC_PLAY_PAUSE") {
                if (!player.playing) {
                    player.pause(false);
                    player.queue.messageUpdate = `${interaction.user.username} | ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ï‡πà‡∏≠`
                } else {
                    player.pause(true);
                    player.queue.messageUpdate = `${interaction.user.username} | ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á`
                }
                mu.embed_playering(client, interaction.guild.id, interaction.member.user.id)
                interaction.deferUpdate()
            } else if (interaction.customId === "MUSIC_NEXT") {
                if (player._autoplay == true) { } else {
                    if (player.queue.tracks.length === 0) {
                        return this.msgtimeout(interaction, '‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ!', "RED", 3, true)
                    }
                }
                const skD = await player.queue.skip()
                player.queue.messageUpdate = `${interaction.member.user.username} ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÄ‡πÄ‡∏•‡πâ‡∏ß`
                interaction.deferUpdate()
                return
            } else if (interaction.customId === "MUSIC_LOOP") {
                interaction.deferUpdate()
            } else if (interaction.customId === "MUSIC_SHUFFLE") {
                interaction.deferUpdate()
            } else if (interaction.customId === "MUSIC_PLUS_VOLUME") {
                const vplus = player.volume + 10
                if (vplus > 100) return this.msgtimeout(interaction, '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏ô \`100%\` ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡πà‡∏∞!', "RED", 3, true)
                player.setVolume(vplus)
                player.queue.messageUpdate = `‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ${vplus}%`
                mu.embed_playering(client, interaction.guild.id, interaction.member.user.id)
                interaction.deferUpdate()
            } else if (interaction.customId === "MUSIC_LOW_VOLUME") {
                const vplus = player.volume - 10
                if (vplus < 0) return this.msgtimeout(interaction, '‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ \`0%\` ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏∞!', "RED", 3, true)
                player.setVolume(vplus)
                player.queue.messageUpdate = `‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ${vplus}%`
                mu.embed_playering(client, interaction.guild.id, interaction.member.user.id)
                interaction.deferUpdate()
            } else if (interaction.customId === "MUSIC_OPEN_AND_CLOSE_LOW_VOLUME") {
                if (player.volume != 0) {
                    player.queue.messageUpdate = `‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡πÄ‡∏•‡πâ‡∏ß`
                    player.setVolume(0)
                } else {
                    player.setVolume(db.defaultVolume)
                    player.queue.messageUpdate = `‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ${db.defaultVolume}%`
                }
                interaction.deferUpdate()
                mu.embed_playering(client, interaction.guild.id, interaction.member.user.id)
            } else if (interaction.customId === "MUSIC_RESRT") {
                client.manager.destroy(interaction.guild.id)
                interaction.message.edit({
                    content: `‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢ ‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á`,
                    embeds: [
                        new MessageEmbed()
                            .setColor("#ff0887")
                            .setAuthor(`004 MUSIC`, client.user.avatarURL())
                            .setTitle(`‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ!`)
                            .setImage(
                                `https://cdn.discordapp.com/attachments/844249988795465728/865547952801579018/b1c0b055835c9042.png`
                            )
                            .setFooter(`Prefix : ${db.prefix}`)
                    ],
                    components: all(true)
                })
                interaction.deferUpdate()

            } else if (interaction.customId === "MUSIC_HELP") {
                const mmff = [
                    '‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡πÄ‡∏™‡∏î‡∏á',
                    '',
                    '‚èÆÔ∏è - ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ',
                    '‚èØÔ∏è - ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß',
                    '‚è≠Ô∏è - ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ',
                    'üîÅ - ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ä‡πâ‡∏≥',
                    'üîÄ - ‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                    'üîä - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ö‡∏≠‡∏ó',
                    'üîâ - ‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ö‡∏≠‡∏ó',
                    'üîá - ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ö‡∏≠‡∏ó',
                    '‚úñÔ∏è - ‡∏•‡∏≤‡∏Å‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á',
                    '‚ùî - ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏π‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏û‡∏•‡∏á',
                ]
                return this.msgtimeout(interaction, '```' + mmff.join('\n') + '```', "#2f3136", 3, true)
            }
            // console.log(channel)
        } catch (e) { console.log(e) }
    },
    async msgtimeout(interaction, msg, color, timeout = 3, reply = false) {
        try {
            let v = null
            if (reply) {
                v = await interaction.reply({
                    ephemeral: true,
                    embeds: [
                        new MessageEmbed()
                            .setDescription(`${msg}`)
                            .setColor(`${color}`)
                    ],
                })
                // await wait(timeout * 1000)
                // await interaction.deleteReply()
            } else {
                interaction.deferUpdate()
                v = await interaction.channel.send({
                    embeds: [
                        new MessageEmbed()
                            .setDescription(`${msg}`)
                            .setColor(`${color}`)
                    ]
                })
            }
            if (v !== null) {
                setTimeout(() => {
                    if (reply == false) {
                        v.delete().catch(() => { })
                    }
                }, 1000 * timeout)
            }
        } catch (e) { console.log(e) }

    }
}